main:
lw $t0 0x0($zero)      ;메모리 0x00 주소에서 값을 가져와 t0 레지스터에 저장함(t0 기댓값 0xf0f6)
lw $t1 0x1($zero)      ;메모리 0x01 주소에서 값을 가져와 t1 레지스터에 저장함(t1 기댓값 0x0010)
lw $t2 0x2($zero)      ;메로리 0x02 주소에서 값을 가져와 t2 레지스터에 저장함(t2 기댓값 0x0f00)
addi $t3 $zero 0x06    ;6값을 zero(0)와 더하여 t3 레지스터에 저장함(t3 기댓값 0x0006)
addi $t4 $zero 0x00    ;t4 레지스터의 값을 0으로 초기화 함
add $s0 $zero $t2      ;t2 레지스터의 값을 zero(0)와 더하여 s0 레지스터에 저장함(s0 기댓값 0x0f00)
addi $t6 $zero 0x00    ;t6 레지스터의 값을 0으로 초기화 함
slt $t5 $t4 $t3        ;t4 레지스터의 값이 t3 레지스터의 값보다 작다면 t5 레지스터에 1을 저장함
beq $t5 $t6 0x03       ;t5 레지스터의 값이 t6 레지스터의 값과 같다면 현재 명령어의 다음 주소로부터 0x03 word 떨어진 주소로 분기함
add $s0 $s0 $t1        ;s0 레지스터의 값에 t1 레지스터의 값을 더하여 s0 레지스터에 저장함(s0 기댓값 0x0f10)
addi $t4 $t4 0x01      ;t4 레지스터의 값에 1값을 더하여 t4 레지스터에 저장함(t4 기댓값 0x0001)
j 0x07                 ;PC 값을 0x1c로 설정함 (반복문)
avg $s1 $s0 $t2        ;s0 레지스터의 값과 t2 레지스터의 값의 평균값을 s1 레지스터에 저장함(s1 기댓값 0x0f30)
popc $s2 $t2           ;t2 레지스터의 값에서 비트 중 1로 설정되어 있는 비트의 개수를 세어 s2 레지스터에 저장함(s2 기댓값 0x0004)
popci $s3 $zero 0x0f00 ;0x0f00값에서 비트 중 1로 설정되어 있는 비트의 개수를 세어 s3 레지스터에 저장함(s3 기댓값 0x0004)
and $s4 $t0 $t1        ;t0 레지스터의 값과 t1 레지스터의 값을 논리곱하여 s4 레지스터에 저장함(s4 기댓값 0x0010)
or $s5 $t0 $t2         ;t0 레지스터의 값과 t2 레지스터의 값을 논리합하여 s5 레지스터에 저장함(s5 기댓값 0xf0f6)
beq $s2 $s3 0x01       ;s2 레지스터의 값과 s3 레지스터의 값이 같다면 현재 명령어의 다음 주소로부터 0x01 word 떨어진 주소로 분기함
sw $s3 0x20($zero)     ;메모리 0x20에 저장이 되면 동작이 이상하게된 것임
sw $s0 0x10($zero)     ;메모리 0x10 주소에 s0 레지스터 값을 저장함
sw $s1 0x11($zero)     ;메모리 0x11 주소에 s1 레지스터 값을 저장함
sw $s2 0x12($zero)     ;메모리 0x12 주소에 s2 레지스터 값을 저장함
sw $s3 0x13($zero)     ;메모리 0x13 주소에 s3 레지스터 값을 저장함
sw $s4 0x14($zero)     ;메모리 0x14 주소에 s4 레지스터 값을 저장함
sw $s5 0x15($zero)     ;메모리 0x15 주소에 s5 레지스터 값을 저장함